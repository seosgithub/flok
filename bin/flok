#!/usr/bin/env ruby

require 'flok'
require 'thor'
require 'fileutils'
require 'closure-compiler'

class FlokCLI < Thor
  desc "new <path>", "Create a new flok project and/or module, you may supply an absolute path or relative, the last entry in the path will be the module name and folder name of the project"
  def new path
    #Name of this project
    name = File.basename(path)

    #Get the directory of the given path, if path is only 'foo', then this will go into '.' (nop)
    Dir.chdir File.dirname(path) do
      #Create the project folder
      Dir.mkdir name

      #Go into the project folder
      Dir.chdir name do
        #Create any needed folders
        Dir.mkdir "app"
        Dir.mkdir "config"
      end
    end
  end

  option :compress, type: :boolean
  desc "build <path>", "Build the products for a project path"
  def build path="."
    #Go into the correct folder
    Dir.chdir path

    #Create a products folder if it dosen't already exist
    Dir.mkdir("./products") unless File.exists?("./products")

    #Get a list of platforms this project supports
  end
end

FlokCLI.start(ARGV)
